#!/usr/bin/env ruby

require 'rubygems'
require 'optparse'
require 'fileutils'
require 'tempfile'
require 'whenever'

require File.expand_path(File.dirname(__FILE__) + "/../lib/version")

options = Hash.new

OptionParser.new do |opts|
  opts.banner = "Usage: whenever [options]"
  opts.on('-v', '--version') { puts "Whenever v#{Whenever::VERSION::STRING}"; exit }
  opts.on('-w', '--write-crontab') { options[:write] = true }
  opts.on('-p', '--update-crontab') { options[:update] = true }
  opts.on('-m', '--marker [a specific string token]') { |token| options[:marker] = token }
  opts.on('-l', '--cron_log [logfile for cron output]') { |token| options[:cron_log] = token }
  opts.on('-E', '--no-error-redirection') { options[:no_stderr_redirect] = true }
  opts.on('-f', '--load-file [schedule file]', 'default: config/schedule.rb') do |file|
    options[:file] = file if file
  end
  opts.on('-u', '--user [user]', 'default: current user') do |user| 
    options[:user] = user if user
  end
end.parse!

options[:file] ||= 'config/schedule.rb'

unless File.exists?(options[:file])
  warn("[fail] can't find file: #{options[:file]}")
  exit(1)
end

command_line = CommandLine.new(options)

if options[:write]
  command_line.write!
elsif options[:update]
  command_line.update!
else
  puts Whenever.cron(options)
  exit
end
